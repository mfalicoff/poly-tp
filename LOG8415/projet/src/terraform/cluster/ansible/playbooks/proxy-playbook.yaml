- hosts: aws_ec2_proxy
  become: yes
  vars:
    project_root: "{{ playbook_dir }}/../../../../.."
    aws_credentials: "{{ lookup('env','HOME') }}/.aws"

  tasks:
    - name: Update and upgrade packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Copy ssh key to proxy
      ansible.builtin.copy:
        src: "{{ project_root }}/src/terraform/cluster/.ssh"
        dest: "/home/app/"

    - name: Copy env key to proxy
      ansible.builtin.copy:
        src: "{{ project_root }}/src/apps/proxy/.env.remote"
        dest: "/home/app/"

    - name: Copy Aws credentials
      ansible.builtin.copy:
        src: "{{ aws_credentials }}"
        dest: "/home/ubuntu/"

    - name: Install Packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started

    - name: Ensure Docker is enabled and starts on boot
      systemd:
          name: docker
          enabled: yes

    - name: Add current user to Docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes


    - name: Run Docker container
      docker_container:
          name: mf-proxy
          image: mazil007/mf-proxy:latest
          pull: yes
          network_mode: host
          volumes:
          - "/home/app/.ssh:/app/.ssh"
          - "/home/app/.env.remote:/app/.env.remote"
          - "/home/app/logs/:/app/logs/"
          - "/home/ubuntu/.aws:/root/.aws"
          restart_policy: always
          state: started

